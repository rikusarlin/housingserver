openapi: 3.0.0
servers:
  - url: http://localhost:8080/api/v2/housing
    description: Local development server
info:
  description: Housing benefit application handling demo API
  version: "1.0.0"
  title: Housing benefit api API
  contact:
    email: riku.sarlin@gmail.com
  license:
    name: MIT
    url: 'https://mit-license.org/'
tags:
  - name: admins
    description: Secured Admin-only calls
  - name: developers
    description: Operations available to regular developers
paths:
  /persons:
    get:
      tags:
        - developers
      summary: fetch persons
      operationId: fetchPersons
      description: |
        Fetch all persons
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/Person'
  /person/{id}:
    get:
      tags:
        - developers
      summary: fetch person
      operationId: fetchPersonById
      description: |
        Fetch person by person id
      parameters:
        - in: path
          name: id
          description: id of person to return
          required: true
          schema:
            $ref: '#/components/schemas/Id'
      responses:
        '200':
          description: person found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        '400':
          description: bad input parameter
        '404':
          description: person not found
    put:
      tags:
        - developers
      summary: update person
      operationId: updatePerson
      description: Updates person info
      parameters:
        - in: path
          name: id
          description: id of person to update
          required: true
          schema:
            $ref: '#/components/schemas/Id'
      responses:
        '200':
          description: person updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'

        '400':
          description: update not successful, error message returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
        description: Person to update
    delete:
      tags:
        - admins
      summary: delete person
      operationId: deletePerson
      description: Deletes person
      parameters:
        - in: path
          name: id
          description: id of person to delete
          required: true
          schema:
            $ref: '#/components/schemas/Id'
      responses:
        '204':
          description: person deleted successfully
        '400':
          description: delete not successful, error message returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: person not found
  /person/{id}/check:
    get:
      tags:
        - developers
      summary: cross-check person info
      operationId: checkPersonById
      description: |
        Cross validate by person id
      parameters:
        - in: path
          name: id
          description: id of person to check
          required: true
          schema:
            $ref: '#/components/schemas/Id'
      responses:
        '200':
          description: person validation ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        '400':
          description: person validation not ok, error message returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: person not found
  /person:
    post:
      tags:
        - admins
      summary: add person
      operationId: addPerson
      description: Adds a person to the system
      responses:
        '201':
          description: person created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        '400':
          description: person creation not ok, error message returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '409':
          description: an existing person already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
        description: Person to add
  /householdmembers/{caseId}:
    get:
      tags:
        - developers
      summary: fetch household members of a given case
      operationId: fetchHouseholdMembers
      description: |
        Fetch all household members of a given case
      parameters:
        - in: path
          name: caseId
          description: id of case
          required: true
          schema:
            $ref: '#/components/schemas/Id'
      responses:
        '200':
          description: search results
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/HouseholdMember'
  /householdmember/{caseId}/{id}:
    get:
      tags:
        - developers
      summary: fetch household member
      operationId: fetchHouseholdMemberById
      description: |
        Fetch household member by id in a given case
      parameters:
        - in: path
          name: caseId
          description: id of case
          required: true
          schema:
            $ref: '#/components/schemas/Id'
        - in: path
          name: id
          description: id of household member to return
          required: true
          schema:
            $ref: '#/components/schemas/Id'
      responses:
        '200':
          description: household member found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HouseholdMember'
        '400':
          description: fetch not successful, error message returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: person not found
    put:
      tags:
        - developers
      summary: update household member in a given case
      operationId: updateHouseholdMember
      description: Updates household member info
      parameters:
        - in: path
          name: caseId
          description: id of case
          required: true
          schema:
            $ref: '#/components/schemas/Id'
        - in: path
          name: id
          description: id of household member to update
          required: true
          schema:
            $ref: '#/components/schemas/Id'
      responses:
        '200':
          description: updated household member
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HouseholdMember'
        '400':
          description: update not successful, error message returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HouseholdMember'
        description: Household member to update
    delete:
      tags:
        - developers
      summary: delete household member in a given case
      operationId: deleteHouseholdMember
      description: Deletes household member in a given case
      parameters:
        - in: path
          name: caseId
          description: id of case
          required: true
          schema:
            $ref: '#/components/schemas/Id'
        - in: path
          name: id
          description: id of household member to delete
          required: true
          schema:
            $ref: '#/components/schemas/Id'
      responses:
        '204':
          description: household member deleted successfully
        '400':
          description: delete not successful, error message returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: household member not found
  /householdmember/{caseId}/{id}/check:
    get:
      tags:
        - developers
      summary: cross-check household member info in a housing benefit application
      operationId: checkHouseholdMemberById
      description: |
        Cross validate by person id
      parameters:
        - in: path
          name: caseId
          description: id of case
          required: true
          schema:
            $ref: '#/components/schemas/Id'
        - in: path
          name: id
          description: id of household member to check
          required: true
          schema:
            $ref: '#/components/schemas/Id'
      responses:
        '200':
          description: household member validation ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HouseholdMember'
        '400':
          description: household member validation not ok, error message returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: household member not found
  /householdmember/{caseId}:
    post:
      tags:
        - developers
      summary: add household member
      operationId: addHouseholdMember
      description: Adds a household member to a given case
      parameters:
        - in: path
          name: caseId
          description: id of case
          required: true
          schema:
            $ref: '#/components/schemas/Id'
      responses:
        '201':
          description: household member created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HouseholdMember'
        '400':
          description: household member creation not ok, error message returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HouseholdMember'
        description: Household member to add
  /expenses/{caseId}:
    get:
      tags:
        - developers
      summary: fetch expenses of a given case
      operationId: fetchExpenses
      description: |
        Fetch all expenses of a given case
      parameters:
        - in: path
          name: caseId
          description: id of case
          required: true
          schema:
            $ref: '#/components/schemas/Id'
      responses:
        '200':
          description: search results
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/Expense'
  /expense/{caseId}/{id}:
    get:
      tags:
        - developers
      summary: fetch expense
      operationId: fetchExpenseById
      description: |
        Fetch expense by id in a given case
      parameters:
        - in: path
          name: caseId
          description: id of case
          required: true
          schema:
            $ref: '#/components/schemas/Id'
        - in: path
          name: id
          description: id of expense to return
          required: true
          schema:
            $ref: '#/components/schemas/Id'
      responses:
        '200':
          description: expense found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
        '400':
          description: fetch not successful, error message returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: expense not found
    put:
      tags:
        - developers
      summary: update expense in a given case
      operationId: updateExpense
      description: Updates expense info
      parameters:
        - in: path
          name: caseId
          description: id of case
          required: true
          schema:
            $ref: '#/components/schemas/Id'
        - in: path
          name: id
          description: id of expense to update
          required: true
          schema:
            $ref: '#/components/schemas/Id'
      responses:
        '200':
          description: updated expense
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
        '400':
          description: update not successful, error message returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Expense'
        description: Expense to update
    delete:
      tags:
        - developers
      summary: delete expense in a given case
      operationId: deleteExpense
      description: Deletes expense in a given case
      parameters:
        - in: path
          name: caseId
          description: id of case
          required: true
          schema:
            $ref: '#/components/schemas/Id'
        - in: path
          name: id
          description: id of expense to delete
          required: true
          schema:
            $ref: '#/components/schemas/Id'
      responses:
        '204':
          description: expense deleted successfully
        '400':
          description: delete not successful, error message returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: expense not found
  /expense/{caseId}/{id}/check:
    get:
      tags:
        - developers
      summary: cross-check expense info in a housing benefit application
      operationId: checkExpenseById
      description: |
        Cross validate by expense id
      parameters:
        - in: path
          name: caseId
          description: id of case
          required: true
          schema:
            $ref: '#/components/schemas/Id'
        - in: path
          name: id
          description: id of expense to check
          required: true
          schema:
            $ref: '#/components/schemas/Id'
      responses:
        '200':
          description: expense validation ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
        '400':
          description: expense validation not ok, error message returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: expense not found
  /expense/{caseId}:
    post:
      tags:
        - developers
      summary: add expense
      operationId: addExpense
      description: Adds an expense to a given case
      parameters:
        - in: path
          name: caseId
          description: id of case
          required: true
          schema:
            $ref: '#/components/schemas/Id'
      responses:
        '201':
          description: expense created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
        '400':
          description: expense creation not ok, error message returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Expense'
        description: Expense to add
  /incomes/{caseId}:
    get:
      tags:
        - developers
      summary: fetch incomes of a given case
      operationId: fetchIncomes
      description: |
        Fetch all incomes of a given case
      parameters:
        - in: path
          name: caseId
          description: id of case
          required: true
          schema:
            $ref: '#/components/schemas/Id'
      responses:
        '200':
          description: search results
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/Income'
  /income/{caseId}/{id}:
    get:
      tags:
        - developers
      summary: fetch income
      operationId: fetchIncomeById
      description: |
        Fetch income by id in a given case
      parameters:
        - in: path
          name: caseId
          description: id of case
          required: true
          schema:
            $ref: '#/components/schemas/Id'
        - in: path
          name: id
          description: id of income to return
          required: true
          schema:
            $ref: '#/components/schemas/Id'
      responses:
        '200':
          description: income found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Income'
        '400':
          description: fetch not successful, error message returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: income not found
    put:
      tags:
        - developers
      summary: update income in a given case
      operationId: updateIncome
      description: Updates income info
      parameters:
        - in: path
          name: caseId
          description: id of case
          required: true
          schema:
            $ref: '#/components/schemas/Id'
        - in: path
          name: id
          description: id of income to update
          required: true
          schema:
            $ref: '#/components/schemas/Id'
      responses:
        '200':
          description: updated income
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Income'
        '400':
          description: update not successful, error message returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Income'
        description: Income to update
    delete:
      tags:
        - developers
      summary: delete income in a given case
      operationId: deleteIncome
      description: Deletes income in a given case
      parameters:
        - in: path
          name: caseId
          description: id of case
          required: true
          schema:
            $ref: '#/components/schemas/Id'
        - in: path
          name: id
          description: id of income to delete
          required: true
          schema:
            $ref: '#/components/schemas/Id'
      responses:
        '204':
          description: income deleted successfully
        '400':
          description: delete not successful, error message returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: income not found
  /income/{caseId}/{id}/check:
    get:
      tags:
        - developers
      summary: cross-check income info in a housing benefit application
      operationId: checkIncomeById
      description: |
        Cross validate by income id
      parameters:
        - in: path
          name: caseId
          description: id of case
          required: true
          schema:
            $ref: '#/components/schemas/Id'
        - in: path
          name: id
          description: id of income to check
          required: true
          schema:
            $ref: '#/components/schemas/Id'
      responses:
        '200':
          description: income validation ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Income'
        '400':
          description: income validation not ok, error message returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: income not found
  /income/{caseId}:
    post:
      tags:
        - developers
      summary: add income
      operationId: addIncome
      description: Adds an income to a given case
      parameters:
        - in: path
          name: caseId
          description: id of case
          required: true
          schema:
            $ref: '#/components/schemas/Id'
      responses:
        '201':
          description: income created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Income'
        '400':
          description: income creation not ok, error message returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Income'
        description: Income to add
  /application/{caseId}:
    get:
      tags:
        - developers
      summary: fetch application of a given case
      operationId: fetchApplication
      description: |
        Fetch all incomes of a given case
      parameters:
        - in: path
          name: caseId
          description: id of case
          required: true
          schema:
            $ref: '#/components/schemas/Id'
      responses:
        '200':
          description: search results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HousingBenefitApplication'
    put:
      tags:
        - developers
      summary: update application in a given case
      operationId: updateApplication
      description: Updates application info
      parameters:
        - in: path
          name: caseId
          description: id of case
          required: true
          schema:
            $ref: '#/components/schemas/Id'
      responses:
        '200':
          description: updated application
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HousingBenefitApplication'
        '400':
          description: update not successful, error message returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HousingBenefitApplication'
        description: Application to update
    delete:
      tags:
        - admins
      summary: delete application of a given case
      operationId: deleteApplication
      description: Deletes application of a given case
      parameters:
        - in: path
          name: caseId
          description: id of case
          required: true
          schema:
            $ref: '#/components/schemas/Id'
      responses:
        '204':
          description: application deleted successfully
        '400':
          description: delete not successful, error message returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: application not found
    post:
      tags:
        - developers
      summary: add application to case
      operationId: addApplication
      description: Adds an application to a given case
      parameters:
        - in: path
          name: caseId
          description: id of case
          required: true
          schema:
            $ref: '#/components/schemas/Id'
      responses:
        '201':
          description: application created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HousingBenefitApplication'
        '400':
          description: application creation not ok, error message returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HousingBenefitApplication'
        description: Application to add
  /application/{caseId}/check:
    get:
      tags:
        - developers
      summary: cross-check application info in a housing benefit application
      operationId: checkApplication
      description: |
        Cross validate by income id
      parameters:
        - in: path
          name: caseId
          description: id of case
          required: true
          schema:
            $ref: '#/components/schemas/Id'
      responses:
        '200':
          description: application validation ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HousingBenefitApplication'
        '400':
          description: application validation not ok, error message returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: application not found
  /cases:
    get:
      tags:
        - admins
      summary: fetch housing benefit cases
      operationId: fetchHousingBenefitCases
      description: |
        Fetch all housing benefit cases
      responses:
        '200':
          description: search results
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/HousingBenefitCase'
  /cases/{personNumber}:
    get:
      tags:
        - developers
      summary: fetch housing benefit cases for a given person
      operationId: fetchHousingBenefitCasesByPersonNumber
      description: |
        Fetch all housing benefit cases of a given person
        A housing benefit case is returned if the given person is
        a household member in the application
      parameters:
        - in: path
          name: personNumber
          description: person number of the person in question 
          required: true
          schema:
            $ref: '#/components/schemas/PersonNumber'
      responses:
        '200':
          description: search results
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/HousingBenefitCase'
  /case/{caseId}:
    get:
      tags:
        - developers
      summary: fetch housing benefit case
      operationId: fetchHousingBenefitCaseById
      description: |
        Fetch housing benefit case by id
      parameters:
        - in: path
          name: caseId
          description: id of case
          required: true
          schema:
            $ref: '#/components/schemas/Id'
      responses:
        '200':
          description: housing benefit application found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HousingBenefitCase'
        '400':
          description: fetch not successful, error message returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: housing benefit case not found
    put:
      tags:
        - developers
      summary: update housing benefit case
      operationId: updateHousingBenefitCase
      description: Updates housing benefit case
      parameters:
        - in: path
          name: caseId
          description: id of case
          required: true
          schema:
            $ref: '#/components/schemas/Id'
      responses:
        '200':
          description: updated housing benefit case
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HousingBenefitCase'
        '400':
          description: update not successful, error message returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HousingBenefitCase'
        description: Housing benefit case to update
    delete:
      tags:
        - admins
      summary: delete housing benefit case
      operationId: deleteHousingBenefitCase
      description: Deletes housing benefit case
      parameters:
        - in: path
          name: caseId
          description: id of case
          required: true
          schema:
            $ref: '#/components/schemas/Id'
      responses:
        '204':
          description: housing benefit case deleted successfully
        '400':
          description: delete not successful, error message returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: housing benefit case not found
  /case/{caseId}/check:
    get:
      tags:
        - developers
      summary: cross-check housing benefit case
      operationId: checkHousingBenefitCase
      description: |
        Cross validate housing benefit case
      parameters:
        - in: path
          name: caseId
          description: id of case
          required: true
          schema:
            $ref: '#/components/schemas/Id'
      responses:
        '200':
          description: housing benefit case validation ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HousingBenefitCase'
        '400':
          description: housing benefit case validation not ok, error message returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: housing benefit case not found
  /case:
    post:
      tags:
        - developers
      summary: add housing benefit case based on application
      operationId: addHousingBenefitCase
      description: Adds housing benefit case
      responses:
        '201':
          description: housing benefit case nad application created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HousingBenefitCase'
        '400':
          description: housing benefit case and application creation not ok, error message returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewHousingBenefitCase'
        description: housing benefit case and application to add
components:
  schemas:
    ErrorMessage:
      type: object
      description: Info about error(s) in backend processing
      properties:
        timestamp:
          type: string
          format: date-time
        status:
          type: number
          format: integer
          description: HTTP status code
        error:
          type: string
          description: description of error
        path:
          type: string
          description: URL path of error
        message:
          type: array
          items:
            type: object
            properties:
              fieldName:
                type: string
                description: name of field, if applicable, where error occured
              errorMessage:
                type: string
                description: a more detailed description of the error
              errorCode:
                type: string
                description: error code
    Id:
      type: integer
      description: Unique identifier of a resource
    IdAndDateRange:
      type: object
      description: Id and possibly open range between two dates - that is, both start end end dates can be empty
      properties:
        id:
          $ref: '#/components/schemas/Id'
        startDate:
          type: string
          format: date
          example: '2020-10-08'
        endDate:
          type: string
          format: date
          example: '2020-10-08'
    Person:
      type: object
      description: A natural person residing in Finland
      properties: 
        id:
          $ref: '#/components/schemas/Id'
        personNumber:
          $ref: '#/components/schemas/PersonNumber'
        firstName:
          type: string
          description: First name of a person
          maxLength: 80
        lastName:
          type: string
          description: Last name of a person
          maxLength: 80
        birthDate:
          type: string
          format: date
          example: '1971-08-71'
    HouseholdMember:
      type: object
      description: Household member info
      allOf:
          - $ref: '#/components/schemas/IdAndDateRange'
          - type: object
            properties: 
              person:
                $ref: '#/components/schemas/Person'
    PersonNumber:
      type: string
      description: Finnish person number
      minLength: 11
      maxLength: 11
      pattern: '^\d{6}[A+-]\d{3}[0-9A-FHJ-NPR-Y]$'
    ExpenseType:
      type: string
      enum: 
        - RENT
        - ELECTRICITY
        - WATER
        - INTEREST
        - MAINTENANCE_CHARGE
        - OTHER
    IncomeType:
      type: string
      enum:
        - SALARY
        - PENSION
        - SOCIAL_BENEFIT
        - STUDY_GRANT
        - DIVIDEND
        - INTEREST
        - OTHER
    Income:
      type: object
      description: Income info
      allOf:
          - $ref: '#/components/schemas/IdAndDateRange'
          - type: object
            properties: 
              incomeType:
                $ref: '#/components/schemas/IncomeType'
              amount:
                type: number
                format: double
              otherIncomeDescription:
                type: string
                description: A textual description for income if income type is OTHER
    Expense:
      type: object
      description: Expense info
      allOf:
          - $ref: '#/components/schemas/IdAndDateRange'
          - type: object
            properties: 
              expenseType:
                $ref: '#/components/schemas/ExpenseType'
              amount:
                type: number
                format: double
              otherExpenseDescription:
                type: string
                description: A textual description for expense if expense type is OTHER
    HousingBenefitApplication:
      type: object
      description: Housing benefit application info
      allOf:
          - $ref: '#/components/schemas/IdAndDateRange'
          - type: object
            properties:
              applicant:
                $ref: '#/components/schemas/Person'
              received:
                type: string
                format: date-time
    CaseState:
      type: string
      enum:
        - NEW
        - ACTIVE
        - WAITING
        - READY
        - CANCELED
    HousingBenefitCase:
      type: object
      description: Housing benefit case
      properties:
        id:
          $ref: '#/components/schemas/Id'
        caseState:
          $ref: '#/components/schemas/CaseState'
        customer:
          $ref: '#/components/schemas/Person'
        application:
          $ref: '#/components/schemas/HousingBenefitApplication'
        householdMembers:
          type: array
          items:
            $ref: '#/components/schemas/HouseholdMember'
        housingExpenses:
          type: array
          items:
            $ref: '#/components/schemas/Expense'
        incomes:
          type: array
          items:
            $ref: '#/components/schemas/Income'
    NewHousingBenefitCase:
      type: object
      description: Housing benefit case
      properties:
        id:
          $ref: '#/components/schemas/Id'
        caseState:
          $ref: '#/components/schemas/CaseState'
        customer:
          $ref: '#/components/schemas/Person'
        application:
          $ref: '#/components/schemas/HousingBenefitApplication'